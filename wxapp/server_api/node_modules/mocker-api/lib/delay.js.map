{"version":3,"sources":["../src/delay.ts"],"names":["name","proxy","timer","mockApi","Object","keys","forEach","key","result","prototype","toString","call","test","req","res","foo","_req","_res","json","setTimeout"],"mappings":";;;;;;;AAGe,SAASA,IAAT,CAAcC,KAAd,EAAgD;AAAA,MAAnBC,KAAmB,uEAAH,CAAG;AAC7D,MAAMC,OAA6F,GAAG,EAAtG;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,QAAMC,MAAM,GAAGP,KAAK,CAACM,GAAD,CAApB;;AACA,QAAKH,MAAM,CAACK,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BH,MAA/B,MAA2C,iBAA3C,IAAgE,QAAQI,IAAR,CAAaJ,MAAb,CAAjE,IAAoGD,GAAG,KAAK,QAA5G,IAAwHL,KAAK,KAAK,CAAtI,EAAyI;AACvIC,MAAAA,OAAO,CAACI,GAAD,CAAP,GAAeN,KAAK,CAACM,GAAD,CAApB;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACI,GAAD,CAAP,GAAe,UAAUM,GAAV,EAAwBC,GAAxB,EAAuC;AACpD,YAAIC,GAAJ;;AACA,YAAIX,MAAM,CAACK,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BH,MAA/B,MAA2C,mBAA/C,EAAoE;AAClEO,UAAAA,GAAG,GAAGP,MAAN;AACD,SAFD,MAEO;AACLO,UAAAA,GAAG,GAAG,aAACC,IAAD,EAAgBC,IAAhB,EAAmC;AACvC,mBAAOA,IAAI,CAACC,IAAL,CAAUV,MAAV,CAAP;AACD,WAFD;AAGD;;AACDW,QAAAA,UAAU,CAAC,YAAM;AACfJ,UAAAA,GAAG,CAACF,GAAD,EAAMC,GAAN,CAAH;AACD,SAFS,EAEPZ,KAFO,CAAV;AAGD,OAZD;AAaD;AACF,GAnBD;AAqBA,SAAOC,OAAP;AACD","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { Mocker, MockerResultFunction } from './';\n\nexport default function name(proxy: Mocker, timer: number = 0) {\n  const mockApi: { [key: string]: any } | ((req: Request, res: Response, next: NextFunction) => void) = {};\n  Object.keys(proxy).forEach((key) => {\n    const result = proxy[key];\n    if ((Object.prototype.toString.call(result) === '[object String]' && /^http/.test(result as string)) || key === '_proxy' || timer === 0) {\n      mockApi[key] = proxy[key];\n    } else {\n      mockApi[key] = function (req: Request, res: Response) {\n        let foo: MockerResultFunction;\n        if (Object.prototype.toString.call(result) === '[object Function]') {\n          foo = result as MockerResultFunction;\n        } else {\n          foo = (_req: Request, _res: Response) => {\n            return _res.json(result);\n          };\n        }\n        setTimeout(() => {\n          foo(req, res);\n        }, timer);\n      };\n    }\n  });\n\n  return mockApi;\n}"]}